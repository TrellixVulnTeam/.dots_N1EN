# remap prefix
unbind C-b
set -g prefix 'C-Space'
bind-key 'C-Space' send-prefix

# Various tmux commands that I can never remember how to use
bind f display-popup -E -h '75%' -w '75%' '~/.dots/bin/menu.sh'
bind l display-popup -E "~/.dots/bin/fzf-tmux-switch-window"

# New window, starting in the directory of the current window
bind c new-window -c '#{pane_current_path}'

unbind %
bind v split-window -h -c '#{pane_current_path}'
unbind '"'
bind s split-window -v -c '#{pane_current_path}'

bind -n MouseDown1StatusRight display-popup -E 'vim ~/wiki/logbook.md'

# Rebind s to something else (interactive choose from sessions)
bind a choose-tree -s 

# Bindings prefixed with <Prefix>T
bind -Ttable1 C display-popup -E '~/.dots/bin/task-add'
bind -Ttable1 S display-popup -E '~/.dots/bin/task-switch'
bind -Ttable1 P display-popup -E '~/.dots/bin/fzf-pass'
bind T switch-client -Ttable1

# Reload
bind R source-file ~/.config/tmux/tmux.conf

set-window-option -g visual-bell both
set-window-option -g bell-action other

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# let vim set title string
set-option -g set-titles on
set-option -g set-titles-string "#T"
set -g allow-rename on

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# upgrade $TERM
set -g default-terminal "screen-256color"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# keep sequential numbers when deleting windows
set -g renumber-windows on

set -g mouse on

setw -g mode-keys vi

# Start windows and panes at 1, not 0
set -g base-index 1

# Same for panes
setw -g pane-base-index 1

# Style
set -g status-style bg=colour0
set -g status-justify centre
set -g status-position top
set -ag status-style fg=black
set -g status-right-length 120
set -g status-left-length 60
set -g status-left '#(~/.dots/bin/tmux-status.sh left)'
set -g status-right '#(~/.dots/bin/tmux-status.sh right)'
set -g pane-active-border-style 'fg=colour3 bg=colour0'
set -g pane-border-style 'fg=colour8 bg=colour0'

set -g window-status-current-format ''
set -g window-status-format ''

set -g message-command-style 'bg=colour10'

# Command mode
set -g message-style 'bg=colour3'
set -g mode-style 'bg=colour10'

# Make copy mode more like vim
bind -T copy-mode-vi v send-keys -X begin-selection

# y yanks but stays in copy-mode
bind -T copy-mode-vi y send-keys -X copy-pipe "~/.dots/bin/copy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
